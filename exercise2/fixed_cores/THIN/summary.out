Memory allocated

Loading modules
Lmod Warning: The architecture selection module has been deprecated. The
module system will now autonomously handle the proper selection of binaries. 
While processing the following module(s):
    Module fullname     Module Filename
    ---------------     ---------------
    architecture/Intel  /orfeo/opt/modules/profiles/architecture/Intel.lua

Loading mkl version 2022.2.1
Loading tbb version 2021.7.1
Loading compiler-rt version 2022.2.1
modules loaded

compile files
gcc -DUSE_DOUBLE -DMKL gemm.c -m64 -I/opt/area/shared/programs/x86/oneAPI/2022.3.1/mkl/2022.2.1/include -L/opt/area/shared/programs/x86/oneAPI/2022.3.1/mkl/2022.2.1/lib/intel64  -lmkl_intel_lp64 -lmkl_gnu_thread -lmkl_core -lgomp -lpthread -lm -ldl  -o DOUBLE/gemm_mkl.exe -DSAVE_RESULTS
gcc -DUSE_DOUBLE -DOPENBLAS gemm.c -m64 -I/opt/programs/openBLAS/0.3.23-omp/include -L/opt/programs/openBLAS/0.3.23-omp/lib -lopenblas -lpthread  -o DOUBLE/gemm_openblas.exe -fopenmp -DSAVE_RESULTS
gcc -DUSE_DOUBLE -DBLIS gemm.c -m64 -I/u/dssc/ldavin00/myblis/include/blis -L/u/dssc/ldavin00/myblis/lib -lpthread -lblis  -o DOUBLE/gemm_blis.exe -fopenmp -DSAVE_RESULTS	
gcc -DUSE_FLOAT -DMKL gemm.c -m64 -I/opt/area/shared/programs/x86/oneAPI/2022.3.1/mkl/2022.2.1/include -L/opt/area/shared/programs/x86/oneAPI/2022.3.1/mkl/2022.2.1/lib/intel64  -lmkl_intel_lp64 -lmkl_gnu_thread -lmkl_core -lgomp -lpthread -lm -ldl  -o FLOAT/gemm_mkl.exe -DSAVE_RESULTS
gcc -DUSE_FLOAT -DOPENBLAS gemm.c -m64 -I/opt/programs/openBLAS/0.3.23-omp/include -L/opt/programs/openBLAS/0.3.23-omp/lib -lopenblas -lpthread  -o FLOAT/gemm_openblas.exe -fopenmp -DSAVE_RESULTS
gcc -DUSE_FLOAT -DBLIS gemm.c -m64 -I/u/dssc/ldavin00/myblis/include/blis -L/u/dssc/ldavin00/myblis/lib -lpthread -lblis -o FLOAT/gemm_blis.exe -fopenmp -DSAVE_RESULTS
files compiled
run files

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2000x2000) and matrix B(2000x2000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.27541691 s


2000x2000x2000	0.027542 s	580.937460 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2000x2000) and matrix B(2000x2000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.23528546 s


2000x2000x2000	0.023529 s	680.025022 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2000x2000) and matrix B(2000x2000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.26719755 s


2000x2000x2000	0.026720 s	598.807886 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2500x2500) and matrix B(2500x2500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.48336105 s


2500x2500x2500	0.048336 s	646.514650 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2500x2500) and matrix B(2500x2500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.44567729 s


2500x2500x2500	0.044568 s	701.179995 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2500x2500) and matrix B(2500x2500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.48920210 s


2500x2500x2500	0.048920 s	638.795295 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3000x3000) and matrix B(3000x3000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.76585350 s


3000x3000x3000	0.076585 s	705.095687 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3000x3000) and matrix B(3000x3000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.74021457 s


3000x3000x3000	0.074021 s	729.518199 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3000x3000) and matrix B(3000x3000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.81594528 s


3000x3000x3000	0.081595 s	661.809086 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3500x3500) and matrix B(3500x3500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.114945997 s


3500x3500x3500	0.114946 s	746.002490 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3500x3500) and matrix B(3500x3500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.114113729 s


3500x3500x3500	0.114114 s	751.443325 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3500x3500) and matrix B(3500x3500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.124155207 s


3500x3500x3500	0.124155 s	690.667770 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4000x4000) and matrix B(4000x4000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.164181140 s


4000x4000x4000	0.164181 s	779.626698 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4000x4000) and matrix B(4000x4000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.162871180 s


4000x4000x4000	0.162871 s	785.897173 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4000x4000) and matrix B(4000x4000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.180979234 s


4000x4000x4000	0.180979 s	707.263464 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4500x4500) and matrix B(4500x4500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.229325214 s


4500x4500x4500	0.229325 s	794.722904 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4500x4500) and matrix B(4500x4500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.235631762 s


4500x4500x4500	0.235632 s	773.452604 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4500x4500) and matrix B(4500x4500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.257098613 s


4500x4500x4500	0.257099 s	708.871969 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5000x5000) and matrix B(5000x5000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.315783196 s


5000x5000x5000	0.315783 s	791.682405 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5000x5000) and matrix B(5000x5000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.326384727 s


5000x5000x5000	0.326385 s	765.967214 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5000x5000) and matrix B(5000x5000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.351799128 s


5000x5000x5000	0.351799 s	710.632802 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5500x5500) and matrix B(5500x5500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.413436710 s


5500x5500x5500	0.413437 s	804.839028 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5500x5500) and matrix B(5500x5500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.427943296 s


5500x5500x5500	0.427943 s	777.556286 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5500x5500) and matrix B(5500x5500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.458988980 s


5500x5500x5500	0.458989 s	724.962939 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6000x6000) and matrix B(6000x6000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.532549576 s


6000x6000x6000	0.532550 s	811.192083 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6000x6000) and matrix B(6000x6000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.542394295 s


6000x6000x6000	0.542394 s	796.468554 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6000x6000) and matrix B(6000x6000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.591275007 s


6000x6000x6000	0.591275 s	730.624489 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6500x6500) and matrix B(6500x6500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.676117012 s


6500x6500x6500	0.676117 s	812.359385 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6500x6500) and matrix B(6500x6500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.695785677 s


6500x6500x6500	0.695786 s	789.395382 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6500x6500) and matrix B(6500x6500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.743380950 s


6500x6500x6500	0.743381 s	738.854016 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7000x7000) and matrix B(7000x7000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.848460278 s


7000x7000x7000	0.848460 s	808.523413 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7000x7000) and matrix B(7000x7000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.871614524 s


7000x7000x7000	0.871615 s	787.045169 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7000x7000) and matrix B(7000x7000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.922133709 s


7000x7000x7000	0.922134 s	743.926822 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7500x7500) and matrix B(7500x7500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.37449888 s


7500x7500x7500	1.037450 s	813.292295 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7500x7500) and matrix B(7500x7500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.74734426 s


7500x7500x7500	1.074734 s	785.077671 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7500x7500) and matrix B(7500x7500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.144271317 s


7500x7500x7500	1.144271 s	737.368828 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8000x8000) and matrix B(8000x8000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.249543053 s


8000x8000x8000	1.249543 s	819.499574 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8000x8000) and matrix B(8000x8000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.288791473 s


8000x8000x8000	1.288791 s	794.542811 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8000x8000) and matrix B(8000x8000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.396409475 s


8000x8000x8000	1.396409 s	733.309261 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8500x8500) and matrix B(8500x8500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.516384335 s


8500x8500x8500	1.516384 s	809.985946 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8500x8500) and matrix B(8500x8500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.555218224 s


8500x8500x8500	1.555218 s	789.760550 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8500x8500) and matrix B(8500x8500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.661371961 s


8500x8500x8500	1.661372 s	739.298621 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9000x9000) and matrix B(9000x9000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.778352188 s


9000x9000x9000	1.778352 s	819.860098 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9000x9000) and matrix B(9000x9000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.825137700 s


9000x9000x9000	1.825138 s	798.843835 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9000x9000) and matrix B(9000x9000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.965350718 s


9000x9000x9000	1.965351 s	741.852325 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9500x9500) and matrix B(9500x9500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.97574904 s


9500x9500x9500	2.097575 s	817.491665 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9500x9500) and matrix B(9500x9500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.164967462 s


9500x9500x9500	2.164967 s	792.044236 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9500x9500) and matrix B(9500x9500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.301159675 s


9500x9500x9500	2.301160 s	745.167760 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10000x10000) and matrix B(10000x10000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.449312542 s


10000x10000x10000	2.449313 s	816.555652 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10000x10000) and matrix B(10000x10000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.511284961 s


10000x10000x10000	2.511285 s	796.405040 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10000x10000) and matrix B(10000x10000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.711576005 s


10000x10000x10000	2.711576 s	737.578440 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10500x10500) and matrix B(10500x10500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.839906490 s


10500x10500x10500	2.839906 s	815.255716 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10500x10500) and matrix B(10500x10500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.904799142 s


10500x10500x10500	2.904799 s	797.043061 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10500x10500) and matrix B(10500x10500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.151910112 s


10500x10500x10500	3.151910 s	734.554577 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11000x11000) and matrix B(11000x11000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.251161305 s


11000x11000x11000	3.251161 s	818.784351 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11000x11000) and matrix B(11000x11000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.355062953 s


11000x11000x11000	3.355063 s	793.427735 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11000x11000) and matrix B(11000x11000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.581727636 s


11000x11000x11000	3.581728 s	743.216758 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11500x11500) and matrix B(11500x11500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.701262958 s


11500x11500x11500	3.701263 s	821.814077 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11500x11500) and matrix B(11500x11500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.823704150 s


11500x11500x11500	3.823704 s	795.498261 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11500x11500) and matrix B(11500x11500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 4.133548630 s


11500x11500x11500	4.133549 s	735.868928 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12000x12000) and matrix B(12000x12000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 4.211872668 s


12000x12000x12000	4.211873 s	820.537626 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12000x12000) and matrix B(12000x12000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 4.386594369 s


12000x12000x12000	4.386594 s	787.854930 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12000x12000) and matrix B(12000x12000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 4.705545960 s


12000x12000x12000	4.705546 s	734.452501 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12500x12500) and matrix B(12500x12500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 4.762018420 s


12500x12500x12500	4.762018 s	820.292921 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12500x12500) and matrix B(12500x12500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 4.951333977 s


12500x12500x12500	4.951334 s	788.928805 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12500x12500) and matrix B(12500x12500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.360970410 s


12500x12500x12500	5.360970 s	728.646066 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13000x13000) and matrix B(13000x13000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.355927159 s


13000x13000x13000	5.355927 s	820.399507 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13000x13000) and matrix B(13000x13000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.503089046 s


13000x13000x13000	5.503089 s	798.460640 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13000x13000) and matrix B(13000x13000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.985049646 s


13000x13000x13000	5.985050 s	734.162665 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13500x13500) and matrix B(13500x13500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.980877129 s


13500x13500x13500	5.980877 s	822.747215 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13500x13500) and matrix B(13500x13500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 6.154978569 s


13500x13500x13500	6.154979 s	799.474758 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13500x13500) and matrix B(13500x13500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 6.702848752 s


13500x13500x13500	6.702849 s	734.128157 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(14000x14000) and matrix B(14000x14000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 6.682705016 s


14000x14000x14000	6.682705 s	821.224338 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(14000x14000) and matrix B(14000x14000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 6.978253531 s


14000x14000x14000	6.978254 s	786.443195 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(14000x14000) and matrix B(14000x14000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 7.321463571 s


14000x14000x14000	7.321464 s	749.576905 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(14500x14500) and matrix B(14500x14500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 7.424385144 s


14500x14500x14500	7.424385 s	821.246458 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(14500x14500) and matrix B(14500x14500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 7.711705501 s


14500x14500x14500	7.711706 s	790.648709 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(14500x14500) and matrix B(14500x14500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 8.235711472 s


14500x14500x14500	8.235711 s	740.342837 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(15000x15000) and matrix B(15000x15000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 8.239009095 s


15000x15000x15000	8.239009 s	819.273279 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(15000x15000) and matrix B(15000x15000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 8.537089670 s


15000x15000x15000	8.537090 s	790.667577 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(15000x15000) and matrix B(15000x15000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 9.161617609 s


15000x15000x15000	9.161618 s	736.769454 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(15500x15500) and matrix B(15500x15500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 9.77013553 s


15500x15500x15500	9.077014 s	820.506652 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(15500x15500) and matrix B(15500x15500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 9.411619622 s


15500x15500x15500	9.411620 s	791.335636 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(15500x15500) and matrix B(15500x15500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 10.138697875 s


15500x15500x15500	10.138698 s	734.586442 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(16000x16000) and matrix B(16000x16000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 9.982257548 s


16000x16000x16000	9.982258 s	820.656045 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(16000x16000) and matrix B(16000x16000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 10.340529747 s


16000x16000x16000	10.340530 s	792.222468 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(16000x16000) and matrix B(16000x16000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 11.166190416 s


16000x16000x16000	11.166190 s	733.643230 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(16500x16500) and matrix B(16500x16500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 10.939604594 s


16500x16500x16500	10.939605 s	821.259116 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(16500x16500) and matrix B(16500x16500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 11.433796313 s


16500x16500x16500	11.433796 s	785.762642 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(16500x16500) and matrix B(16500x16500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 12.154379699 s


16500x16500x16500	12.154380 s	739.177994 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(17000x17000) and matrix B(17000x17000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 11.977078746 s


17000x17000x17000	11.977079 s	820.400384 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(17000x17000) and matrix B(17000x17000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 12.437291183 s


17000x17000x17000	12.437291 s	790.043415 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(17000x17000) and matrix B(17000x17000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 13.415625449 s


17000x17000x17000	13.415625 s	732.429512 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(17500x17500) and matrix B(17500x17500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 13.30384525 s


17500x17500x17500	13.030385 s	822.596599 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(17500x17500) and matrix B(17500x17500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 13.554680487 s


17500x17500x17500	13.554680 s	790.778507 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(17500x17500) and matrix B(17500x17500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 14.464976101 s


17500x17500x17500	14.464976 s	741.014014 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(18000x18000) and matrix B(18000x18000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 14.172974962 s


18000x18000x18000	14.172975 s	822.974713 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(18000x18000) and matrix B(18000x18000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 14.704073524 s


18000x18000x18000	14.704074 s	793.249570 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(18000x18000) and matrix B(18000x18000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 15.713497421 s


18000x18000x18000	15.713497 s	742.291782 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(18500x18500) and matrix B(18500x18500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 15.478238395 s


18500x18500x18500	15.478238 s	818.132508 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(18500x18500) and matrix B(18500x18500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 16.441174597 s


18500x18500x18500	16.441175 s	770.215651 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(18500x18500) and matrix B(18500x18500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 17.218233490 s


18500x18500x18500	17.218233 s	735.455818 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(19000x19000) and matrix B(19000x19000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 16.712191650 s


19000x19000x19000	16.712192 s	820.837882 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(19000x19000) and matrix B(19000x19000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 17.409278198 s


19000x19000x19000	17.409278 s	787.970635 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(19000x19000) and matrix B(19000x19000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 18.589804635 s


19000x19000x19000	18.589805 s	737.931370 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(19500x19500) and matrix B(19500x19500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 18.138598091 s


19500x19500x19500	18.138598 s	817.579723 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(19500x19500) and matrix B(19500x19500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 18.706003738 s


19500x19500x19500	18.706004 s	792.780233 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(19500x19500) and matrix B(19500x19500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 20.43893736 s


19500x19500x19500	20.043894 s	739.863731 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(20000x20000) and matrix B(20000x20000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 19.545598853 s


20000x20000x20000	19.545599 s	818.598607 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(20000x20000) and matrix B(20000x20000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 20.814919019 s


20000x20000x20000	20.814919 s	768.679426 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(20000x20000) and matrix B(20000x20000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 21.557991727 s


20000x20000x20000	21.557992 s	742.184161 GFLOPS
File saved successfully
files run
rm -rf */*.exe
Removing mkl version 2022.2.1
Use `module list` to view any remaining dependent modules.
Removing compiler-rt version 2022.2.1
Use `module list` to view any remaining dependent modules.
Removing tbb version 2021.7.1
Use `module list` to view any remaining dependent modules.
program terminated
